Unofficial Documentation on Call/Scenes Framework(probably will be called by ReoWorks)

->This will be updated as soon as and as much as possible to provide the needed help required to work with the framework
->An official documentation will be made available as soon as the framework is complete and works as intended.


Requirements:
	-A server
	-Any editor you can use
	
	
Basic principle:

	-The framework is divided into 2 sections, Calls and Scenes. Scenes contain the layout information of the page as well as the required functionality for that page. Calls on the other hand work like a library for the specified scene.
	
	-Due to how the framework is built, it allows the developer to go overboard with it and mold it to how he wants to. 
	
	-This does not share any mentality with MVC frameworks, which have a movel views controller, therefor any developers that have used mvc frameworks might feel abit indifferent about it.
	
	-As of 18/01/2017, there isn't currently a benchmark in terms of security using this model. This will be updated as needed.
	
	-Note that this framework is not to replace any currently working frameworks. There's a reason why the MVC model was dominant in the market for this long. This is aimed to help train developers that have minimal idea of how frameworks work and to provided with a somewhat secure one if they plan to actively develop with it.
	
	-The good thing about this framework is that the sky is the limit with what you can do, because it is heavily based on what the developer can make and not on what automations exist there of. Hence why this is also a heavy limitation for some.
	
	-If this framework shows to work efficiently and securely, then maybe it can be introduced to the heavy production website market.
	
	
How the system works:

	-Theoretically simple. For each Scene of the website, there exist atleast one Call. A Call is basically a concentration of fuctions, variables, statements that give a scene its usability and functionality, while also allowing the scene to maintain its html5 goodness.
	
	-Why not build everything entirely from php and have it use renders and all those functionalities from MVC frameworks? Because, this is to help newer developers get into spirit and show them something different from legacy and the norm coding for PHP. Also because not everybody who picks up a  framework is an experienced PHP developer. This refers to the numerous front-end artists out there, allowing to build a skeletal back-end with minimum requirements so that they can do as they want with their front end abilities, using javascript, ajax, jason, or what makes them comfortable without having to worry much about site backend functionality.
	
	-With the above said, this does not mean that in the event that a developer wants to used it closer to an MVC framework cannot. The framework structure allows for multiple implementations, even if those are partial renders and the such. 
	-With the above said, this does not mean that in the event that a developer wants to used it closer to an MVC framework cannot. The framework structure allows for multiple implementations, even if those are partial renders and the such. 